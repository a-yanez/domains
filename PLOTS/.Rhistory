)
the.columns=c(colnames(my.data))
the.rows=c(rownames(my.data))
therownames=c(the.rows[2:158])
mtext(the.columns,line=0.2,at=1:ncol(my.data),las=2,cex = 0.15)
mtext(therownames,line=0.2,at=2:(nrow(my.data)-1), side = 2, las=1,cex=0.15)
lineas.gordas=c(4,9,13,16,24,26,154)
lineas.flacas=c(46,51,71,95,101,105,138,143,150)
abline(h=lineas.gordas + 0.5,par(lwd=1.2,cex=0.8))
abline(h=lineas.flacas + 0.5,lty=2,par(lwd=1.2,cex=0.8))
dev.off()
pdf("CAZymes.pdf")
image(x, y, t(my.data),
col = "springgreen3",
breaks = c(0.5,1.5),
xaxt = 'n',
yaxt = 'n',
xlab = '',
ylab = '',
ylim = c(max(y) - 0.5, min(y) + 0.5)
)
library(readr)
signalPCAZymes <- read_delim("~/Faena/Clavibacter/R/signalPCAZymes.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(signalPCAZymes)
library(readr)
NAMES <- read_delim("~/Faena/Clavibacter/R/NAMES.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(NAMES)
whole.data<-t(signalPCAZymes)
colnames(whole.data)<-whole.data[1,]
whole.data<-whole.data[-1,]
whole.data<-whole.data[order(as.numeric(row.names(whole.data))),]
column.order=c("0","44","41","117","118","111","110","35","69","501","1","68","67","66","65","64","63","62","61","77","78","60","79","5","109","88","80","81","108","114","119","42","59","82","83","120","121","122","123","124","125","126","57","58","127","130","132","107","106","105","116","133","134","401","56","55","54","53","131","135","136","104","52","51","50","49","48","137","138","115","143","402","300","98","84","43","86","102","85","400","500","97","99","149","153","96","162","89","163","87","164","165","100","72","71","73","2","39","101","40","74","46","6","16","7","91","90","75","405","200","201","502","303","202","503","301","406","302","112","95","113","45","403","10","404","94","93","103","92","23","12","37","203","3","4","33","38","17","18","30","11","24","25","8","9","19","20","31","32","70","129","128","156","144","140","141","152","158","145","159","146","160","161","147","139","142","148","154","155","150","157","151","26","21","22","34","27","36","28","29","14","15","13","47","76","800")
rownames(whole.data)<-column.order
whole.data<-whole.data[order(as.numeric(row.names(whole.data))),]
real.names<-NAMES$NAME
rownames(whole.data)=real.names
mode(whole.data) = "numeric"
x = (1:ncol(whole.data))
y = (1:nrow(whole.data))
image(x, y, t(whole.data),
col = c("tomato","red"),
breaks = c(0.5,1.5,2.5),
xaxt = 'n',
yaxt = 'n',
xlab = '',
ylab = '',
ylim = c(max(y) - 0.5, min(y) + 0.5)
)
the.columns=c(colnames(whole.data))
the.rows=c(rownames(whole.data))
therownames=c(the.rows[2:185])
mtext(the.columns,line=0.2,at=1:ncol(whole.data),las=2,cex = 0.05)
mtext(therownames,line=0.2,at=2:(nrow(whole.data)-1), side = 2, las=1,cex=0.15)
lineas.gordas=c(5,10,14,30,33,35,37,166,170,174,181)
abline(h=lineas.gordas + 0.5,par(lwd=1.2,cex=0.8))
lineas.flacas=c(17,23,27,39,41,45,70,77,92,97,98,105,114,117,122,139,142,157,162)
abline(h=lineas.flacas + 0.5,lty=2,par(lwd=1.2,cex=0.8))
image(x, y, t(first.data),
col = c("salmon",rgb(215,0,0, maxColorValue = 255)),
breaks = c(0.5,1.5,2.5),
xaxt = 'n',
yaxt = 'n',
xlab = '',
ylab = '',
ylim = c(max(y) - 0.5, min(y) + 0.5)
)
license()
install.packages("vegan")
install.packages("ggplot2")
install.packages("cowplot")
setwd("~/Faena/Nelly")
library(readr)
FIRSTmission_MOD <- read_delim("FIRSTmission_MOD.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(FIRSTmission_MOD)
library(readr)
FIRSTmission_MOD <- read_delim("FIRSTmission_MOD.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(FIRSTmission_MOD)
library(readr)
FIRSTmission_MOD <- read_delim("FIRSTmission_MOD.csv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(FIRSTmission_MOD)
colnames(FIRSTmission_MOD)=c("family","domains number")
library(ggplot2)
colnames(FIRSTmission_MOD)=c("family","domains_number")
p<-ggplot(FIRSTmission_MOD,aes(x=family,y=domains_number))+geom_boxplot()
p
p<-ggplot(FIRSTmission_MOD,aes(x=family,y=domains_number,group=1))+geom_boxplot()
p
p<-ggplot(FIRSTmission_MOD,aes(x=family,y=domains_number,group=2))+geom_boxplot()
p
p<-ggplot(as.numeric(FIRSTmission_MOD),aes(x=family,y=domains_number))+geom_boxplot()
tableplot<-as.numeric(FIRSTmission_MOD)
tableplot<-as.table(FIRSTmission_MOD)
tableplot<-as.data.frame(FIRSTmission_MOD)
p<-ggplot(tableplot,aes(x=family,y=domains_number))+geom_boxplot()
p
typeof(FIRSTmission_MOD)
FIRSTmission_MOD$family<-as.factor(FIRSTmission_MOD$family)
p<-ggplot(tableplot,aes(x=family,y=domains_number))+geom_boxplot()
p
FIRSTmission_MOD$domains_number<-as.numeric(FIRSTmission_MOD$domains_number)
p<-ggplot(tableplot,aes(x=family,y=domains_number))+geom_boxplot()
p
p<-ggplot(tableplot,aes(x=family,y=domains_number,group=family))+geom_boxplot()
p
library(readr)
FIRSTmission_MOD2 <- read_delim("FIRSTmission_MOD2.csv",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(FIRSTmission_MOD2)
colnames(FIRSTmission_MOD2)=c("family","domains_number")
p<-ggplot(FIRSTmission_MOD2,aes(x=family,y=domains_number,group=family))+geom_boxplot()
p
install.packages("readr")
head(TableDomain)
TableDomain <- read_delim("../OUTPUTS/countDOMAINS", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
head(TableDomain)
TableDomain <- read_delim("../OUTPUTS/countDOMAINS", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
setwd("/media/strain/disco2/Alun/GIT/domains/PLOTS")
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
setwd("/media/strain/disco2/Alun/GIT/domains/PLOTS")
3+4
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
library(readr)
library(ggplot2)
"\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv")
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t")
head(TableDomain)
, escape_double = FALSE, col_names = FALSE, trim_ws = TRUE
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t")
head(TableDomain)
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t", escape_double = FALSE, trim_ws = TRUE)
head(TableDomain)
counts(TableDomain)
stats(TableDomain)
head(TableDomain)
ggplot(TableDomain,aes(TableDomain$DomainName, TableDomain$Family))
ShortTable<-head(TableDomain,10)
shortTable
ShortTable
ShortTable<-c(head(TableDomain,10),tail(TableDomain,10))
ShortTable
ShortTable<-head(TableDomain,10),
HeadTable<-head(TableDomain,10),
HeadTable<-head(TableDomain,10)
TailTable<-tail(TableDomain,10)
TailTable<-tail(TableDomain,10)
TailTable
HeadTable
ShortTable<-merge(HeadTable,TailTable)
ShortTable
merge(HeadTable,TailTable)
join(HeadTable,TailTable)
library(plyr)
library(plyr)
join(HeadTable,TailTable)
join(HeadTable,TailTable,type="inner")
TailTable
join(HeadTable,TailTable)
HeadTable<-(DomainName="oligo_HPY")
HeadTable
HeadTable<-head(TableDomain,10)
HeadTable
HeadTable<-head(TableDomain,10)
HeadTable
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t", escape_double = FALSE, trim_ws = TRUE)
HeadTable<-head(TableDomain,10)
HeadTable
TailTable
ShortTable<-merge(HeadTable,TailTable)
ShortTable
ShortTable
HeadTable<-head(TableDomain,10)
TailTable<-tail(TableDomain,10)
HeadTable<-(DomainName="oligo_HPY")
HeadTable
TailTable
HeadTable<-head(TableDomain,10)
TailTable<-tail(TableDomain,10)
HeadTable
TailTable
ShortTable<-merge(HeadTable,TailTable)
ShortTable
ShortTable<-join(HeadTable,TailTable)
ShortTable
ShortTable<-merge(HeadTable,TailTable,,by.x = "DomainName")
ShortTable<-merge(HeadTable,TailTable,by.x = "DomainName")
ShortTable<-merge(HeadTable,TailTable,by.x = "DomainName",by.y = "DomainName")
ShortTable
ShortTable
ShortTable<-join(HeadTable,TailTable,by.x = "DomainName",by.y = "DomainName")
ShortTable
HeadTable<-head(TableDomain,10)
HeadTable
HeadTable[1,5]
HeadTable[5,1]
HeadTable
HeadTable[5,1]<-"fam2"
HeadTable
HeadTable[6,1]<-"fam2"
HeadTable
ggplot(HeadTable,aes(HeadTable$DomainName, HeadTable$Family))
ggplot(HeadTable,aes(HeadTable$DomainName, HeadTable$Family))+geom_bar()
ggplot(HeadTable,aes(x=HeadTable$DomainName,y=HeadTable$Family))+geom_bar()
ggplot(HeadTable, aes(x=HeadTable$DomainName,y=HeadTable$Family)) + geom_bar()
HeadTable
ggplot(HeadTable, aes(x=HeadTable$DomainName,y=HeadTable$Family)) + geom_bar(stat="identity")
count(HeadTable)
cuenta<-count(HeadTable)
cuenta
FIRSTmission_MOD2 <- read_delim("FIRSTmission_MOD2.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
FIRSTmission <- read_delim("../OUTPUTS/FIRSTmission", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
head(FIRSTmission)
FIRSTmission_MOD2 <- read_delim("FIRSTmission_MOD2.csv", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
head(FIRSTmission_MOD2)
colnames(FIRSTmission_MOD2)=c("family","domains_number")
colnames(FIRSTmission_MOD2)=c("family","domains_number")
p<-ggplot(FIRSTmission_MOD2,aes(x=family,y=domains_number,group=family))+geom_boxplot()
p
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t", escape_double = FALSE, trim_ws = TRUE)
HeadTable<-head(TableDomain,10)
TailTable<-tail(TableDomain,10)
HeadTable
ArchaeasTotalBP.m<-merge(ArchaeasHeatPlot,ArchaeasTaxa,by.x="RastId",by.y="RastId") ## works as expected
ArchaeasHeatPlotBP.m <- melt(ArchaeasTotalBP.m,id =c("RastId","Name","SuperPhylum","Phylum","Class","Order","Family","RastNo","Size","Contigs"))
HeadTable.m<-melt(HeadTable)
HeadTable<-head(TableDomain,10)
TailTable<-tail(TableDomain,10)
HeadTable
HeadTable[5,1]<-"fam2"
HeadTable[6,1]<-"fam2"
HeadTable
HeadTable.m<-melt(HeadTable)
library( reshape )
HeadTable.m<-melt(HeadTable)
HeadTable.m
HeadTable
HeadTable[5,"MembersFamily"]<-"50"
HeadTable[6,"MembersFamily"]<-"50"
HeadTable
HeadTable[5,1]<-"fam2" HeadTable[6,1]<-"fam2" HeadTable[5,"MembersFamily"]<-"50"
HeadTable$Percentage<-HeadTable$MembersFamily
HeadTable
HeadTable
cuenta<-count(HeadTable)
cuenta
cuenta<-count(HeadTable,c(Family,DomainName))
cuenta<-count(HeadTable,c(HeadTable$Family,HeadTable$DomainName))
cuenta<-count(HeadTable,c("Family","DomainName"))
cuenta
cuenta
Genes=count(HeadTable,Family)
Genes=count(HeadTable,c("Family"))
Genes
Genes["fam1"]
Genes[.,"fam1"]
Genes[1,"fam1"]
Genes$Family["fam1"]
Genes$Family["fam2"]
Genes$Family
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes=2
## contar genes familia
FreqDom<-cuenta["familia","dominio"]
result<-FreDom/NumGenes
return(result)
}
FrequenciaDominioFamilia(Fam1,ABC_tran)
FrecuenciaDominioFamilia(Fam1,ABC_tran)
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes=2
## contar genes familia
FreqDom<-cuenta["familia","dominio"]
result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia(Fam1,ABC_tran)
NumGenes<-Genes$freq [which(Genes$Family=="Fam1")]
NumGenes
Genes=count(HeadTable,c("Family"))
which(Genes$Family=="Fam1")]
which(Genes$Family=="Fam1")
Genes$Family
NumGenes<-Genes$freq [which(Genes$Family=="fam1")]
which(Genes$Family=="fam1")
NumGenes<-Genes$freq[which(Genes$Family=="fam1")]
NumGenes
FrecuenciaDominioFamilia(fam1,ABC_tran)
FrecuenciaDominioFamilia(fam1,ABC_tran)
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-Genes$freq[which(Genes$Family=="familia")]
## contar genes familia
FreqDom<-cuenta["familia","dominio"]
result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia(fam1,ABC_tran)
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-Genes$freq[which(Genes$Family=="familia")]
## contar genes familia
# FreqDom<-cuenta["familia","dominio"]
#result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia(fam1,ABC_tran)
result<-NumGenes
NumGenes<-Genes$freq[which(Genes$Family=="familia")]
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-Genes$freq[which(Genes$Family=="familia")]
result<-NumGenes
## contar genes familia
# FreqDom<-cuenta["familia","dominio"]
#result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia(fam1,ABC_tran)
result<-int(NumGenes)
result<-integer(NumGenes)
NumGenes<-as.numerical(Genes$freq[which(Genes$Family=="familia")] )
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-as.numerical(Genes$freq[which(Genes$Family==familia)] )
result<-NumGenes
## contar genes familia
# FreqDom<-cuenta["familia","dominio"]
#result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia(fam1,ABC_tran)
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
result<-NumGenes
## contar genes familia
# FreqDom<-cuenta["familia","dominio"]
#result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia(fam1,ABC_tran)
FrecuenciaDominioFamilia("fam1","ABC_tran")
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
#result<-NumGenes
## contar genes familia
FreqDom<-cuenta["familia","dominio"]
result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia("fam1","ABC_tran")
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
#result<-NumGenes
## contar genes familia
FreqDom<-cuenta[familia,dominio]
result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia("fam1","ABC_tran")
result<-FreqDom
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
#result<-NumGenes
## contar genes familia
FreqDom<-cuenta[familia,dominio]
result<-FreqDom
#result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia("fam1","ABC_tran")
cuenta(("fam1","ABC_tran")
cuenta("fam1","ABC_tran")
cuenta<-count(HeadTable,c("Family","DomainName"))
cuenta("fam1","ABC_tran")
cuenta["fam1","ABC_tran"]
cuenta
cuenta$freq[wich(cuenta$Family=="fam1",cuenta$DomainName=="ABC_tran")]
cuenta$freq[which(cuenta$Family=="fam1",cuenta$DomainName=="ABC_tran")]
cuenta$freq[which(cuenta$Family=="fam1" and cuenta$DomainName=="ABC_tran")]
cuenta$freq[which(cuenta$Family=="fam1" && cuenta$DomainName=="ABC_tran")]
which(cuenta$Family=="fam1" && cuenta$DomainName=="ABC_tran")
which(cuenta$Family=="fam1")
which(cuenta$DomainName=="ABC_tran")
which(cuenta$Family=="fam1" && cuenta$DomainName=="ABC_tran")
which(cuenta$Family=="fam1") && which(cuenta$DomainName=="ABC_tran")
which(cuenta$Family=="fam1" | cuenta$DomainName=="ABC_tran")
which(cuenta$Family=="fam1" & cuenta$DomainName=="ABC_tran")
cuenta$freq[which(cuenta$Family=="fam1" & cuenta$DomainName=="ABC_tran")]
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
#result<-NumGenes
## contar genes familia
FreqDom<-cuenta$freq[which(cuenta$Family==familia & cuenta$DomainName==dominio)]
result<-FreqDom
#result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia("fam1","ABC_tran")
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
#result<-NumGenes
## contar genes familia
FreqDom<-cuenta$freq[which(cuenta$Family==familia & cuenta$DomainName==dominio)]
result<-FreqDom/NumGenes
return(result)
}
FrecuenciaDominioFamilia("fam1","ABC_tran")
DomTable<-count(HeadTable,c("Family","DomainName"))
Genes=count(HeadTable,c("Family"))
FrecuenciaDominioFamilia<-function(familia,dominio){
#Genes["familia"]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
#result<-NumGenes
## contar genes familia
FreqDom<-DomTable$freq[which(DomTable$Family==familia & DomTable$DomainName==dominio)]
result<-FreqDom/NumGenes
return(result)
}
DomTable
apply(DomTable,c(Family,DomainName),FrecuenciaDominioFamilia)
apply(DomTable,c("Family","DomainName"),FrecuenciaDominioFamilia)
apply(DomTable,1,FrecuenciaDominioFamilia)
x<-apply(DomTable,1,FrecuenciaDominioFamilia)
FrecuenciaDominioFamilia<-function(x){
#x is a row x[1]=Family x[2]=DomainName
familia<-x[1]
dominio<-x[2]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
#result<-NumGenes
## contar genes familia
FreqDom<-DomTable$freq[which(DomTable$Family==familia & DomTable$DomainName==dominio)]
result<-FreqDom/NumGenes
return(result)
}
x<-apply(DomTable,1,FrecuenciaDominioFamilia)
x
DomTable$DomFreq<-apply(DomTable,1,FrecuenciaDominioFamilia)
DomTable
DomTable
HeadTable<-head(TableDomain,10)
HeadTable
HeadTable[5,1]<-"fam2"
HeadTable[6,1]<-"fam2"
HeadTable[5,"MembersFamily"]<-"50"
HeadTable[6,"MembersFamily"]<-"50"
HeadTable$Percentage<-HeadTable$MembersFamily
HeadTable
DomTable<-count(HeadTable,c("Family","DomainName"))
Genes=count(HeadTable,c("Family"))
FrecuenciaDominioFamilia<-function(x){
#x is a row x[1]=Family x[2]=DomainName
familia<-x[1]
dominio<-x[2]
NumGenes<-(Genes$freq[which(Genes$Family==familia)])
#result<-NumGenes
## contar genes familia
FreqDom<-DomTable$freq[which(DomTable$Family==familia & DomTable$DomainName==dominio)]
result<-FreqDom/NumGenes
return(result)
}
DomTable$DomFreq<-apply(DomTable,1,FrecuenciaDominioFamilia)
DomTable
Genes
ggplot(DomTable, aes(x=DomTable$DomainName,y=DomTable$DomFreq)) + geom_bar()
ggplot(DomTable, aes(x=DomTable$DomainName,y=DomTable$DomFreq,colour=y=DomTable$Family)) +geom_bar(stat = "identity")
ggplot(DomTable, aes(x=DomTable$DomainName,y=DomTable$DomFreq,colour=DomTable$Family)) +geom_bar(stat = "identity")
ggplot(DomTable, aes(x=DomTable$DomainName,y=DomTable$DomFreq,colour=DomTable$Family)) +geom_bar(stat = "identity")+ scale_fill_manual(values=c("#0000FF","#000000", "#58FAF4","#A901DB","#FAAC58", "#FF0000"))
ggplot(DomTable, aes(x=DomTable$DomainName,y=DomTable$DomFreq,fill=DomTable$Family)) +geom_bar(stat = "identity")+ scale_fill_manual(values=c("#0000FF","#000000", "#58FAF4","#A901DB","#FAAC58", "#FF0000"))
ggplot(DomTable, aes(x=DomTable$DomainName,y=DomTable$DomFreq,fill=DomTable$Family)) +geom_bar(stat = "identity")+ scale_fill_manual(values=c("#000000", "#58FAF4","#A901DB","#FAAC58", "#FF0000"))
ggplot(DomTable, aes(x=DomTable$DomainName,y=DomTable$DomFreq,fill=DomTable$Family)) +geom_bar(stat = "identity")+ scale_fill_manual(values=c("#58FAF4","#A901DB","#FAAC58", "#FF0000"))
ggplot(DomTable, aes(x=DomTable$DomainName,y=DomTable$DomFreq,fill=DomTable$Family)) +geom_bar(stat = "identity")
TableDomain <- read_delim("../OUTPUTS/THIRDmission.csv", "\t", escape_double = FALSE, trim_ws = TRUE)
TableDomain
countDOMAINS <- read_delim("../OUTPUTS/countDOMAINS", "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
countDOMAINS
FIRSTmission_MOD2
head(FIRSTmission_MOD2)
colnames(FIRSTmission_MOD2)=c("family","domains_number")
p<-ggplot(FIRSTmission_MOD2,aes(x=family,y=domains_number,group=family))+geom_boxplot()
p
colnames
stats(FIRSTmission_MOD2)
head(FIRSTmission_MOD2)
bymedian <- with(FIRSTmission_MOD2, reorder(family, -domains_number, median))
p<-ggplot(FIRSTmission_MOD2,aes(x=family,y=domains_number,group=family))+geom_boxplot()
p
p<-ggplot(bymedian,aes(x=family,y=domains_number,group=family))+geom_boxplot()
bymedian
bymedian <- with(FIRSTmission_MOD2, reorder(family, domains_number, median))
bymedian
FIRSTmission_MOD2$Order<-ordered(FIRSTmission_MOD2$Order,levels=levels(FIRSTmission_MOD2$Order)[bymedian])
levels=levels(FIRSTmission_MOD2$Order)[bymedian]
tapply(FIRSTmission_MOD2$family, FIRSTmission_MOD2$domains_number, median)
tapply(FIRSTmission_MOD2$family, FIRSTmission_MOD2$domains_number, median)
clear
